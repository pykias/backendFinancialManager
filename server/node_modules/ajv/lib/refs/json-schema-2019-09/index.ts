import type Ajv from "ajv/lib/core"
import type {AnySchemaObject} from "ajv/lib/types"
import * as metaSchema from "ajv/lib/refs/json-schema-2019-09/schema.json"
import * as applicator from "ajv/lib/refs/json-schema-2019-09/meta/applicator.json"
import * as content from "ajv/lib/refs/json-schema-2019-09/meta/content.json"
import * as core from "ajv/lib/refs/json-schema-2019-09/meta/core.json"
import * as format from "ajv/lib/refs/json-schema-2019-09/meta/format.json"
import * as metadata from "ajv/lib/refs/json-schema-2019-09/meta/meta-data.json"
import * as validation from "ajv/lib/refs/json-schema-2019-09/meta/validation.json"

const META_SUPPORT_DATA = ["/properties"]

export default function addMetaSchema2019(this: Ajv, $data?: boolean): Ajv {
  ;[
    metaSchema,
    applicator,
    content,
    core,
    with$data(this, format),
    metadata,
    with$data(this, validation),
  ].forEach((sch) => this.addMetaSchema(sch, undefined, false))
  return this

  function with$data(ajv: Ajv, sch: AnySchemaObject): AnySchemaObject {
    return $data ? ajv.$dataMetaSchema(sch, META_SUPPORT_DATA) : sch
  }
}
